// Fetch font character bitmap from flash
byte charBuffer[5] = {0};

int characterMapping(byte character){
  byte mappedCharacter = character;
  if (mappedCharacter >= 32 && mappedCharacter <= 255) {
    mappedCharacter -= 32; // subtract font array offset
  //} else if (mappedCharacter >= 97 && mappedCharacter <= 122) {
  //  mappedCharacter -= 64; // subtract font array offset and convert lowercase to uppercase
  } else {
    mappedCharacter = 96; // unknown character block
  }
  return mappedCharacter;
}

// variable width pixel font (no lowercase)
// character arrays are 6 bytes, 
// byte 0 is the width of the character
// bytes 1-5 is the bitmask for the pixel columns
const char Font[][6] PROGMEM = {
{1, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000}, // 00:32 <space>
{1, 0b00010111, 0b00000000, 0b00000000, 0b00000000, 0b00000000}, // 01:33 !
{3, 0b00000011, 0b00000000, 0b00000011, 0b00000000, 0b00000000}, // 02:34 "
{5, 0b00001010, 0b00011111, 0b00001010, 0b00011111, 0b00001010}, // 03:35 #
{5, 0b00010010, 0b00010101, 0b00011111, 0b00010101, 0b00001001}, // 04:36 $
{5, 0b00010001, 0b00001000, 0b00000100, 0b00000010, 0b00010001}, // 05:37 %
{5, 0b00001010, 0b00010101, 0b00010101, 0b00011110, 0b00010100}, // 06:38 &
{1, 0b00000001, 0b00000000, 0b00000000, 0b00000000, 0b00000000}, // 07:39 '
{2, 0b00001110, 0b00010001, 0b00000000, 0b00000000, 0b00000000}, // 08:40 (
{2, 0b00010001, 0b00001110, 0b00000000, 0b00000000, 0b00000000}, // 09:41 )

{5, 0b00001010, 0b00000100, 0b00011111, 0b00000100, 0b00001010}, // 10:42 *
{3, 0b00000100, 0b00001110, 0b00000100, 0b00000000, 0b00000000}, // 11:43 +
{1, 0b00010000, 0b00000000, 0b00000000, 0b00000000, 0b00000000}, // 12:44 ,
{3, 0b00000100, 0b00000100, 0b00000100, 0b00000000, 0b00000000}, // 13:45 -
{1, 0b00010000, 0b00000000, 0b00000000, 0b00000000, 0b00000000}, // 14:46 .
{5, 0b00010000, 0b00001000, 0b00000100, 0b00000010, 0b00000001}, // 15:47 /
{5, 0b00001110, 0b00011001, 0b00010101, 0b00010011, 0b00001110}, // 16:48 0
{3, 0b00010010, 0b00011111, 0b00010000, 0b00000000, 0b00000000}, // 17:49 1
{5, 0b00011001, 0b00010101, 0b00010101, 0b00010101, 0b00010010}, // 18:50 2
{5, 0b00010001, 0b00010001, 0b00010101, 0b00010101, 0b00001010}, // 19:51 3

{5, 0b00000011, 0b00000100, 0b00000100, 0b00000100, 0b00011111}, // 20:52 4
{5, 0b00010111, 0b00010101, 0b00010101, 0b00010101, 0b00001001}, // 21:53 5
{5, 0b00001110, 0b00010101, 0b00010101, 0b00010101, 0b00001001}, // 22:54 6
{5, 0b00000001, 0b00000001, 0b00000001, 0b00011101, 0b00000011}, // 23:55 7
{5, 0b00001010, 0b00010101, 0b00010101, 0b00010101, 0b00001010}, // 24:56 8
{5, 0b00000010, 0b00010101, 0b00010101, 0b00010101, 0b00001110}, // 25:57 9
{1, 0b00001010, 0b00000000, 0b00000000, 0b00000000, 0b00000000}, // 26:58 :
{2, 0b00010000, 0b00001010, 0b00000000, 0b00000000, 0b00000000}, // 27:59 ;
{3, 0b00000100, 0b00001010, 0b00010001, 0b00000000, 0b00000000}, // 28:60 <
{5, 0b00001010, 0b00001010, 0b00001010, 0b00001010, 0b00001010}, // 29:61 =

{3, 0b00010001, 0b00001010, 0b00000100, 0b00000000, 0b00000000}, // 30:62 >
{5, 0b00000010, 0b00000001, 0b00010101, 0b00000101, 0b00000010}, // 31:63 ?
{5, 0b00001110, 0b00010001, 0b00010101, 0b00001001, 0b00001110}, // 32:64 @
{5, 0b00011110, 0b00000101, 0b00000101, 0b00000101, 0b00011110}, // 33:65 A
{5, 0b00011111, 0b00010101, 0b00010101, 0b00010101, 0b00001010}, // 34:66 B
{5, 0b00001110, 0b00010001, 0b00010001, 0b00010001, 0b00010001}, // 35:67 C
{5, 0b00011111, 0b00010001, 0b00010001, 0b00010001, 0b00001110}, // 36:68 D
{5, 0b00011111, 0b00010101, 0b00010101, 0b00010101, 0b00010101}, // 37:69 E
{5, 0b00011111, 0b00000101, 0b00000101, 0b00000001, 0b00000001}, // 38:70 F
{5, 0b00001110, 0b00010001, 0b00010101, 0b00010101, 0b00011101}, // 39:71 G

{5, 0b00011111, 0b00000100, 0b00000100, 0b00000100, 0b00011111}, // 40:72 H
{3, 0b00010001, 0b00011111, 0b00010001, 0b00000000, 0b00000000}, // 41:73 I
{5, 0b00001000, 0b00010000, 0b00010001, 0b00010001, 0b00001111}, // 42:74 J
{5, 0b00011111, 0b00000100, 0b00000100, 0b00001010, 0b00010001}, // 43:75 K
{5, 0b00011111, 0b00010000, 0b00010000, 0b00010000, 0b00010000}, // 44:76 L
{5, 0b00011111, 0b00000010, 0b00000100, 0b00000010, 0b00011111}, // 45:77 M
{5, 0b00011111, 0b00000001, 0b00001110, 0b00010000, 0b00011111}, // 46:78 N
{5, 0b00001110, 0b00010001, 0b00010001, 0b00010001, 0b00001110}, // 47:79 O
{5, 0b00011111, 0b00000101, 0b00000101, 0b00000101, 0b00000010}, // 48:80 P
{5, 0b00001110, 0b00010001, 0b00010001, 0b00011110, 0b00010000}, // 49:81 Q

{5, 0b00011111, 0b00000101, 0b00000101, 0b00001101, 0b00010010}, // 50:82 R
{5, 0b00010010, 0b00010101, 0b00010101, 0b00010101, 0b00001001}, // 51:83 S
{5, 0b00000001, 0b00000001, 0b00011111, 0b00000001, 0b00000001}, // 52:84 T
{5, 0b00001111, 0b00010000, 0b00010000, 0b00010000, 0b00001111}, // 53:85 U
{5, 0b00000011, 0b00001100, 0b00010000, 0b00001100, 0b00000011}, // 54:86 V
{5, 0b00000111, 0b00011000, 0b00000110, 0b00011000, 0b00000111}, // 55:87 W
{5, 0b00010001, 0b00001010, 0b00000100, 0b00001010, 0b00010001}, // 56:88 X
{5, 0b00000001, 0b00000010, 0b00011100, 0b00000010, 0b00000001}, // 57:89 Y
{5, 0b00010001, 0b00011001, 0b00010101, 0b00010011, 0b00010001}, // 58:90 Z
{3, 0b00011111, 0b00010001, 0b00010001, 0b00000000, 0b00000000}, // 59:91 [

{5, 0b00000001, 0b00000010, 0b00000100, 0b00001000, 0b00010000}, // 60:92 (\)
{5, 0b00010001, 0b00010001, 0b00011111, 0b00000000, 0b00000000}, // 61:93 ]
{5, 0b00000010, 0b00000001, 0b00000010, 0b00000000, 0b00000000}, // 62:94 ^
{5, 0b00010000, 0b00010000, 0b00010000, 0b00010000, 0b00010000}, // 63:95 _
{2, 0b00000001, 0b00000010, 0b00000000, 0b00000000, 0b00000000}, // 64:96 `
{5, 0b00001001, 0b00010101, 0b00010101, 0b00010101, 0b00011110}, // 65:97 a
{5, 0b00011111, 0b00010010, 0b00010010, 0b00010010, 0b00001100}, // 66:98 b
{5, 0b00001110, 0b00010001, 0b00010001, 0b00010001, 0b00001010}, // 67:99 c
{5, 0b00001100, 0b00010010, 0b00010010, 0b00010010, 0b00011111}, // 68:100 d
{5, 0b00001110, 0b00010101, 0b00010101, 0b00010101, 0b00010110}, // 69:101 e

{5, 0b00011110, 0b00000101, 0b00000101, 0b00000001, 0b00000001}, // 70:102 f
{5, 0b00010010, 0b00010101, 0b00010101, 0b00010101, 0b00001110}, // 71:103 g
{5, 0b00011111, 0b00000010, 0b00000010, 0b00000010, 0b00011100}, // 72:104 h
{1, 0b00011101, 0b00000000, 0b00000000, 0b00000000, 0b00000000}, // 73:105 i
{5, 0b00010000, 0b00010000, 0b00010000, 0b00010000, 0b00001111}, // 74:106 j
{5, 0b00011111, 0b00000100, 0b00000100, 0b00001010, 0b00010001}, // 75:107 k
{5, 0b00001111, 0b00010000, 0b00010000, 0b00010000, 0b00010000}, // 76:108 l
{5, 0b00011110, 0b00000001, 0b00011110, 0b00000001, 0b00011110}, // 77:109 m
{5, 0b00011111, 0b00000001, 0b00000001, 0b00000001, 0b00011110}, // 78:110 n
{5, 0b00001110, 0b00010001, 0b00010001, 0b00010001, 0b00001110}, // 79:111 o

{5, 0b00011111, 0b00001001, 0b00001001, 0b00001001, 0b00000110}, //112 p
{5, 0b00000110, 0b00001001, 0b00001001, 0b00001001, 0b00011111}, //113 q
{5, 0b00011111, 0b00000010, 0b00000001, 0b00000001, 0b00000010}, //114 r
{5, 0b00010010, 0b00010101, 0b00010101, 0b00010101, 0b00001001}, //115 s
{5, 0b00001111, 0b00010010, 0b00010010, 0b00010000, 0b00001000}, //116 t
{5, 0b00001111, 0b00010000, 0b00010000, 0b00001000, 0b00011111}, //117 u
{5, 0b00000011, 0b00001100, 0b00010000, 0b00001100, 0b00000011}, //118 v
{5, 0b00001111, 0b00010000, 0b00001111, 0b00010000, 0b00001111}, //119 w
{5, 0b00011011, 0b00000100, 0b00000100, 0b00000100, 0b00011011}, //120 x
{5, 0b00010011, 0b00010100, 0b00010100, 0b00010100, 0b00001111}, //121 y

{5, 0b00100001, 0b00011001, 0b00010101, 0b00010110, 0b00010001}, //122 z
{3, 0b00000100, 0b00001110, 0b00010001, 0b00000000, 0b00000000}, //123 {
{1, 0b00011111, 0b00000000, 0b00000000, 0b00000000, 0b00000000}, //124 |
{3, 0b00010001, 0b00001110, 0b00000100, 0b00000000, 0b00000000}, //125 }
{4, 0b00000010, 0b00000001, 0b00000010, 0b00000001, 0b00000000}, //126 ~
}; 






